{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Map the name and the properties in an object.\n * This is used to map CSS rules as plain objects.\n * @param  {Object} obj - The props.\n * @param  {Function} map - The mapper.\n * @return {Object}\n */\n\nvar mapProps = exports.mapProps = function mapProps(obj) {\n  var map = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n  var newObj = {};\n  var props = Object.keys(obj || {});\n  if (!props.length) return {};\n  var current = props.map(function (name) {\n    return {\n      name: name,\n      value: obj[name]\n    };\n  });\n  var updated = current.map(function (prop) {\n    return map(prop.name, prop.value);\n  });\n  updated.forEach(function (prop) {\n    newObj[prop.name] = prop.value;\n  });\n  return newObj;\n};\n/**\n * Get active resource from responsive list.\n * @param  {String|Object} resources - The path to the resource or the resources\n * by responsiveness.\n * @param  {Object} responsive - The current responsive status.\n * @return {String} - The selected resource.\n */\n\n\nvar getResponsiveResource = exports.getResponsiveResource = function getResponsiveResource(resources) {\n  var responsive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var resource = null;\n\n  if (typeof resources === 'string') {\n    resource = resources;\n  } else if (resources) {\n    var small = responsive.small,\n        medium = responsive.medium,\n        large = responsive.large;\n    resource = small ? resources.small : medium ? resources.medium : large ? resources.large : resources.xlarge;\n  }\n\n  return resource;\n};","map":null,"metadata":{},"sourceType":"script"}