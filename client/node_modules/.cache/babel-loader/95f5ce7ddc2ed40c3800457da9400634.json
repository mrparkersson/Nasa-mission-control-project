{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _howler = require('howler');\n\nvar _howler2 = _interopRequireDefault(_howler);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Create handler for sound player functionalities.\n * This uses the `howler` package to create a player.\n * @param  {Object} depencencies\n * @param  {Function} depencencies.Howl\n * @param  {Object} conf - Player configuration\n * @param  {Object} conf.sound - Configuration passed to `howler.Howl`.\n * @param  {Object} conf.settings - Sound settings\n * @return {Howl}\n */\n\n\nexports.default = function (depencencies, conf) {\n  var deps = _extends({\n    Howl: _howler2.default.Howl\n  }, depencencies);\n\n  var _ref = conf || {},\n      _ref$sound = _ref.sound,\n      sound = _ref$sound === undefined ? {} : _ref$sound,\n      _ref$settings = _ref.settings,\n      settings = _ref$settings === undefined ? {} : _ref$settings;\n\n  var player = new deps.Howl(sound);\n\n  if (settings.oneAtATime) {\n    var play = player.play.bind(player);\n    var lastPlay = void 0;\n\n    player.play = function () {\n      if (lastPlay) {\n        this.stop(lastPlay);\n      }\n\n      lastPlay = play.apply(undefined, arguments);\n      return lastPlay;\n    };\n  }\n\n  return player;\n};","map":null,"metadata":{},"sourceType":"script"}