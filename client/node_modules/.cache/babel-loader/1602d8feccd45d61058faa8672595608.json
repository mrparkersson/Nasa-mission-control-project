{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Puffs = function (_Component) {\n  _inherits(Puffs, _Component);\n\n  function Puffs() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Puffs);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Puffs.__proto__ || Object.getPrototypeOf(Puffs)).call.apply(_ref, [this].concat(args))), _this), _this.element = null, _this.puffTimeout = null, _this.puffElementsTimeout = null, _this.onPuffs = function () {\n      var puffs = [];\n\n      for (var i = 0; i < _this.props.quantity; i++) {\n        puffs.push(_this.createPuff());\n      }\n\n      puffs.forEach(function (puff) {\n        return _this.element.appendChild(puff);\n      });\n      _this.puffElementsTimeout = setTimeout(function () {\n        puffs.forEach(function (puff) {\n          return puff.remove();\n        });\n      }, _this.props.puffInterval - 100);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  } // Root element.\n  // Timeout to start next puff animations.\n  // Timeout to remove current puff animations.\n\n\n  _createClass(Puffs, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      if (this.props.animate) {\n        this.startAnimations();\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.animate !== this.props.animate) {\n        if (this.props.animate) {\n          this.startAnimations();\n        } else {\n          this.stopAnimations();\n        }\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.stopAnimations();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          theme = _props.theme,\n          classes = _props.classes,\n          animate = _props.animate,\n          puffInterval = _props.puffInterval,\n          quantity = _props.quantity,\n          className = _props.className,\n          children = _props.children,\n          etc = _objectWithoutProperties(_props, ['theme', 'classes', 'animate', 'puffInterval', 'quantity', 'className', 'children']);\n\n      var cls = (0, _classnames2.default)(classes.root, className);\n      return _react2.default.createElement('div', _extends({\n        className: cls,\n        ref: function ref(el) {\n          return _this2.element = el;\n        }\n      }, etc), _react2.default.createElement('div', {\n        className: classes.children\n      }, children));\n    }\n  }, {\n    key: 'stopAnimations',\n    value: function stopAnimations() {\n      clearInterval(this.puffTimeout);\n      clearTimeout(this.puffElementsTimeout);\n    }\n  }, {\n    key: 'startAnimations',\n    value: function startAnimations() {\n      this.onPuffs();\n      this.puffTimeout = setInterval(this.onPuffs, this.props.puffInterval);\n    }\n    /**\n     * Create a random set of puffs on the back of the container.\n     */\n\n  }, {\n    key: 'createPuff',\n\n    /**\n     * Create a puff with random valid properties.\n     * @return {HTMLElement}\n     */\n    value: function createPuff() {\n      var classes = this.props.classes;\n      var puff = document.createElement('div');\n      var isLong = Math.round(Math.random());\n      var cls = classes.puff + (isLong ? ' ' + classes.puffLong : '');\n      puff.setAttribute('class', cls);\n      var duration = 1000 + Math.round(Math.random() * 3000);\n      puff.style.animationDuration = duration + 'ms';\n      var width = this.element.offsetWidth;\n      var height = this.element.offsetHeight;\n      puff.style.left = 50 + Math.round(Math.random() * (width - 100)) + 'px';\n      puff.style.top = 100 + Math.round(Math.random() * (height - 200)) + 'px';\n      return puff;\n    }\n  }]);\n\n  return Puffs;\n}(_react.Component);\n\nPuffs.propTypes = {\n  theme: _propTypes2.default.any.isRequired,\n  classes: _propTypes2.default.any.isRequired,\n  animate: _propTypes2.default.bool,\n\n  /**\n   * How often to create new puffs. Should be greater than 4000ms.\n   */\n  puffInterval: _propTypes2.default.number,\n\n  /**\n   * Total number of puffs to create.\n   */\n  quantity: _propTypes2.default.number\n};\nPuffs.defaultProps = {\n  animate: true,\n  puffInterval: 5000,\n  quantity: 8\n};\nexports.default = Puffs;","map":null,"metadata":{},"sourceType":"script"}