{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.default = Animation;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactTransitionGroup = require('react-transition-group');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar getStatuses = function getStatuses(status) {\n  return {\n    entering: status === 'entering',\n    entered: status === 'entered',\n    exiting: status === 'exiting',\n    exited: status === 'exited'\n  };\n};\n\nfunction Animation(props) {\n  var animate = props.animate,\n      show = props.show,\n      appear = props.appear,\n      timeout = props.timeout,\n      children = props.children,\n      rest = _objectWithoutProperties(props, ['animate', 'show', 'appear', 'timeout', 'children']);\n\n  return _react2.default.createElement(_reactTransitionGroup.Transition, _extends({\n    appear: animate ? appear : false,\n    timeout: animate ? timeout : 0,\n    'in': show\n  }, rest), function (status) {\n    return children(animate ? _extends({\n      status: status\n    }, getStatuses(status)) : {\n      status: ''\n    });\n  });\n}\n\nAnimation.propTypes = {\n  /**\n   * Enable the animation for this component and its children.\n   */\n  animate: _propTypes2.default.bool,\n\n  /**\n   * If animatable, should component start its animation or not.\n   */\n  show: _propTypes2.default.bool,\n\n  /**\n   * A function to render the children. It will receive an object parameter\n   * with information about the animation status, with the following properties:\n   * - `status: string` - The `<Transition />` received status parameter.\n   * - `entering: bool` - Started to be shown.\n   * - `entered: bool` - Animation is completed and now is shown.\n   * - `exiting: bool` - Started to be hidden.\n   * - `exited: bool` - Animation is completed and now is hidden.\n   */\n  children: _propTypes2.default.func.isRequired,\n\n  /**\n   * Do the animation on first mount.\n   * Passed down to `<Transition />`.\n   */\n  appear: _propTypes2.default.bool,\n\n  /**\n   * Animation enter and exit duration in ms.\n   * Passed down to `<Transition />`.\n   */\n  timeout: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.shape({\n    enter: _propTypes2.default.number,\n    exit: _propTypes2.default.number\n  })])\n};\nAnimation.defaultProps = {\n  show: true,\n  animate: false,\n  appear: true,\n  timeout: 0\n};","map":null,"metadata":{},"sourceType":"script"}