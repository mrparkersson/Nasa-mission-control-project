{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (wMin, hMin, wMax, hMax) {\n  var width = _detectNode2.default ? 1024 : getViewportSize('Width');\n  var height = _detectNode2.default ? 768 : getViewportSize('Height');\n  width = wMin ? width < wMin ? wMin : width : width;\n  width = wMax ? width > wMax ? wMax : width : width;\n  height = hMin ? height < hMin ? hMin : height : height;\n  height = hMax ? height > hMax ? hMax : height : height;\n  return {\n    width: width,\n    height: height\n  };\n};\n\nvar _detectNode = require('detect-node');\n\nvar _detectNode2 = _interopRequireDefault(_detectNode);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar getViewportSize = function getViewportSize(Name) {\n  var size;\n  var name = Name.toLowerCase();\n  var document = window.document;\n  var documentElement = document.documentElement; // IE6 & IE7 don't have window.innerWidth or innerHeight\n\n  if (window['inner' + Name] === undefined) {\n    size = documentElement['client' + Name];\n  } // WebKit doesn't include scrollbars while calculating viewport size so we have to get fancy\n  else if (window['inner' + Name] !== documentElement['client' + Name]) {\n    // Insert markup to test if a media query will match document.doumentElement[\"client\" + Name]\n    var bodyElement = document.createElement('body');\n    bodyElement.id = 'vpw-test-b';\n    bodyElement.style.cssText = 'overflow:scroll';\n    var divElement = document.createElement('div');\n    divElement.id = 'vpw-test-d';\n    divElement.style.cssText = 'position:absolute;top:-1000px'; // Getting specific on the CSS selector so it won't get overridden easily\n\n    divElement.innerHTML = '<style>@media(' + name + ':' + documentElement['client' + Name] + 'px){body#vpw-test-b div#vpw-test-d{' + name + ':7px!important}}</style>';\n    bodyElement.appendChild(divElement);\n    documentElement.insertBefore(bodyElement, document.head);\n\n    if (divElement['offset' + Name] === 7) {\n      // Media query matches document.documentElement[\"client\" + Name]\n      size = documentElement['client' + Name];\n    } else {\n      // Media query didn't match, use window[\"inner\" + Name]\n      size = window['inner' + Name];\n    } // Cleanup\n\n\n    documentElement.removeChild(bodyElement);\n  } // Default to use window[\"inner\" + Name]\n  else {\n    size = window['inner' + Name];\n  }\n\n  return size;\n};\n/**\n * Get the usable browser window dimentions.\n *\n * @param  {Number} wMin - Minimum width.\n * @param  {Number} hMin - Minimum height.\n * @param  {Number} wMax - Maximum width.\n * @param  {Number} hMax - Maximum height.\n *\n * @return {Object} { Number width, Number height }\n */","map":null,"metadata":{},"sourceType":"script"}